<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="comp__list_8h" kind="file">
    <compoundname>comp_list.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="lists__test_8c" local="yes">/home/alexandre/Desktop/comp/compiladores/tests/lists_test.c</includedby>
    <includedby refid="comp__list_8c" local="yes">/home/alexandre/Desktop/comp/compiladores/src/comp_list.c</includedby>
    <includedby refid="main_8h" local="yes">/home/alexandre/Desktop/comp/compiladores/include/main.h</includedby>
    <incdepgraph>
      <node id="19">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>/home/alexandre/Desktop/comp/compiladores/include/comp_list.h</label>
        <link refid="comp_list.h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20">
        <label>/home/alexandre/Desktop/comp/compiladores/include/comp_list.h</label>
        <link refid="comp_list.h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/alexandre/Desktop/comp/compiladores/include/main.h</label>
        <link refid="main_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcomp__list__t" prot="public">comp_list_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="comp__list_8h_1a86d7707f17e312de714f327457bfe5b2" prot="public" static="no">
        <type>struct <ref refid="structcomp__list__t" kindref="compound">comp_list_t</ref></type>
        <definition>typedef struct comp_list_t 
 List</definition>
        <argsstring></argsstring>
        <name>List</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexandre/Desktop/comp/compiladores/include/comp_list.h" line="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="comp__list_8h_1a788b75e8618ecbc7470035f5fa07e1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcomp__list__t" kindref="compound">List</ref> *</type>
        <definition>List* list_init</definition>
        <argsstring>(void)</argsstring>
        <name>list_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexandre/Desktop/comp/compiladores/include/comp_list.h" line="15" bodyfile="/home/alexandre/Desktop/comp/compiladores/src/comp_list.c" bodystart="8" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="comp__list_8h_1af93456b9e64f2612c80ee959263b8c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcomp__list__t" kindref="compound">List</ref> *</type>
        <definition>List* list_insert</definition>
        <argsstring>(List *list, int value)</argsstring>
        <name>list_insert</name>
        <param>
          <type><ref refid="structcomp__list__t" kindref="compound">List</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexandre/Desktop/comp/compiladores/include/comp_list.h" line="16" bodyfile="/home/alexandre/Desktop/comp/compiladores/src/comp_list.c" bodystart="15" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="comp__list_8h_1a5761efe5b5b8b822466b7f831586cb21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void list_print</definition>
        <argsstring>(List *list)</argsstring>
        <name>list_print</name>
        <param>
          <type><ref refid="structcomp__list__t" kindref="compound">List</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexandre/Desktop/comp/compiladores/include/comp_list.h" line="17" bodyfile="/home/alexandre/Desktop/comp/compiladores/src/comp_list.c" bodystart="38" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="comp__list_8h_1a8a17c03469263740f77f0487633c2f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcomp__list__t" kindref="compound">List</ref> *</type>
        <definition>List* list_lookup</definition>
        <argsstring>(List *list, int value)</argsstring>
        <name>list_lookup</name>
        <param>
          <type><ref refid="structcomp__list__t" kindref="compound">List</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexandre/Desktop/comp/compiladores/include/comp_list.h" line="18" bodyfile="/home/alexandre/Desktop/comp/compiladores/src/comp_list.c" bodystart="56" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="comp__list_8h_1a34f5f12e3457fbb204a44ac231cf9a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcomp__list__t" kindref="compound">List</ref> *</type>
        <definition>List* list_remove</definition>
        <argsstring>(List *list, int value)</argsstring>
        <name>list_remove</name>
        <param>
          <type><ref refid="structcomp__list__t" kindref="compound">List</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexandre/Desktop/comp/compiladores/include/comp_list.h" line="19" bodyfile="/home/alexandre/Desktop/comp/compiladores/src/comp_list.c" bodystart="80" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>COMP_LIST_H</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>COMP_LIST_H</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="structcomp__list__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomp__list__t" kindref="compound">comp_list_t</ref><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcomp__list__t" kindref="compound">comp_list_t</ref><sp/>*next;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="structcomp__list__t" kindref="compound">List</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="structcomp__list__t" kindref="compound">List</ref>*<sp/>list_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="structcomp__list__t" kindref="compound">List</ref>*<sp/>list_insert(<ref refid="structcomp__list__t" kindref="compound">List</ref>*<sp/>list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>list_print(<ref refid="structcomp__list__t" kindref="compound">List</ref>*<sp/>list);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="structcomp__list__t" kindref="compound">List</ref>*<sp/>list_lookup(<ref refid="structcomp__list__t" kindref="compound">List</ref>*<sp/>list,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="structcomp__list__t" kindref="compound">List</ref>*<sp/>list_remove(<ref refid="structcomp__list__t" kindref="compound">List</ref>*<sp/>list,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/alexandre/Desktop/comp/compiladores/include/comp_list.h"/>
  </compounddef>
</doxygen>
